@page "/"

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<Button ViewType="Button.ButtonType.Primary" Text="Open Modal" OnClick="@(()=>_modal.OpenModal())"></Button>
<Button ViewType="Button.ButtonType.Success" Text="Open Modal 2" OnClick="@(()=>_modal2.OpenModal())"></Button>
<Button ViewType="Button.ButtonType.Secondary" Text="Show Confirm" OnClick="@(()=> _confirm.ShowConfirm("Question!","Do you like this?"))" ButtonSecondaryCss="btn-secondary"></Button>
<Modal @ref="_modal" Size="Modal.ModalSize.Default" HeaderTitle="Groot" SubHeaderTitle="I am Groot">
    <BodyContent>this is the body</BodyContent>
    <FooterContent>this is the footer!</FooterContent>
</Modal>

<Modal @ref="_modal2" Size="Modal.ModalSize.Default" HeaderTitle="Groot" SubHeaderTitle="I am Groot">
    <HeaderContent>this is just a header</HeaderContent>
    <BodyContent>this is the body</BodyContent>
    <FooterContent>this is the footer!</FooterContent>
</Modal>

<Confirm @ref="_confirm"></Confirm>

<div>
    inside click: @_insideClick
    <div style="border:1px solid black">
        <OutsideClick OnOutsideClick="@(()=> _insideClick = false)" OnInsideFocus="@(()=> _insideClick = true)">
            hello click anywhere inside here !
        </OutsideClick>
    </div>
</div>

<ComboBox Items="items" TItem="KeyValuePair<string,string>" ValueFieldName="Value"
          IsEditable="true" PlaceHolder="Search for a number..."
          ShowRemoveButton="true" CanAddNewItem="true"></ComboBox>

<DropDown Items="items" ShowEmpty="true"></DropDown>

<DatePicker Label="dt here" @bind-Date="_dt"></DatePicker>

<Tabs>
    <Tab Title="tab 1">
        <h1>this is a tab</h1>
    </Tab>
    <Tab Title="tab 2">
        <h2>this is the second tab</h2>
    </Tab>
</Tabs>

<WebTextInput @bind-Text="_text" IsErrorFunc="() => true"></WebTextInput>


@code {
    private Modal _modal;
    private Modal _modal2;
    private Confirm _confirm;
    private bool _insideClick;
    private DateTime _dt = DateTime.Now;
    private string _text;

    private List<KeyValuePair<string, string>> items = new List<KeyValuePair<string, string>>();

    protected override void OnInitialized()
    {
        for (var i = 0; i < 100; i++)
        {
            items.Add(new KeyValuePair<string, string>(i.ToString(), i.ToString()));
        }
        base.OnInitialized();
    }

}







